
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.List;

public class DaoStudent {
	//定义一个集合类型的引用，通过构造方法将整个集合传入
	private List<Student> list;
	
	public DaoStudent(List<Student> list){
		this.list = list;
	}
	
	//自定义方法实现将整个集合写入到文件中
	public void write() throws IOException{
		//1.创建ObjectOutputStream类型的对象与./student.txt文件关联
		ObjectOutputStream oos = new ObjectOutputStream(
				new FileOutputStream("./student.txt"));
		//2.将整个集合的学生信息都写入到文件中
		oos.writeObject(list);
		//System.out.println("写入数据到文件成功！");
		//3.关闭流对象并释放有关的资源
		oos.close();
	}
	
	//自定义方法实现读取文件中的所有学生信息
	@SuppressWarnings("unchecked")
	public List<Student> read() throws IOException, ClassNotFoundException{
		//当./student.txt文件存在时，才需要读取里面的内容
		if(new File("./student.txt").exists()){
			//1.创建ObjectInputStream类型的对象与./student.txt文件关联
			ObjectInputStream ois = new ObjectInputStream(
					new FileInputStream("./student.txt"));
			//2.将文件中的所有学生信息都读取出来
			list = (List<Student>) ois.readObject();
			for(Student s : list){
				System.out.println(s);
			}
			//System.out.println("读取文件中的数据成功！");
			//3.关闭流对象并释放有关的资源
			ois.close();
		}
		return list;
	}
}
